#!/usr/bin/env bash

LASTARG="$#"

if [[ $LASTARG != 1 ]]; then
  echo "No branch specified!"
  exit 1
fi

BRANCH="$1"
if ! git rev-parse --verify ${BRANCH} >/dev/null 2>&1 ; then
  echo "Branch ${BRANCH} does not exist."
  exit 2
fi

echo "Branch ${BRANCH} selected."

if [ "${BRANCH}" = "main" ]; then
  echo "Never deleting ${BRANCH}."
  exit 3
elif [ "${BRANCH}" = "master" ]; then
  echo "Never deleting ${BRANCH}."
  exit 3
fi

SYSTEM_PROFILES_ROOT="/nix/var/nix/profiles/system-profiles"

MATCHING_BUILDS=$(ls -d ${SYSTEM_PROFILES_ROOT}/${BRANCH}*)
N_MATCHING_BUILDS=$(wc -w <<< $MATCHING_BUILDS)

echo "1. Will unlink $N_MATCHING_BUILDS matching builds."
# TODO only use -D when explicitly forced
# check for post merge build if -d (no force) is used
echo "2. Will run \"git branch -D ${BRANCH}\""
echo "3. Regenerate boot entries."

read -p "Are you sure? " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    # handle exits from shell or function but don't exit interactive shell
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1
fi

echo "Unlinking builds."
for link in ${MATCHING_BUILDS[@]}; do
  echo "Unlinking ${link}."
  sudo unlink "$link"
done

echo "Deleting branch."
git branch -D ${BRANCH}

echo "Regenerating boot entries."
sudo /run/current-system/bin/switch-to-configuration boot
